When would you want to create a remote repository rather than keeping all your
work local?

    A remote repository is useful if you want to share your repository to
    others. In this way, you can have multiple colaborators. Also, your
    repository will not be just a local repository. This means you will
    have access of your remote repository from any other computer than
    yours.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If you choose stay up-to-date automatically, it may import versions
    that are still not complete to be used. But rather, if you choose to
    pull changes manually, you can have the control of when is the best
    time to do it.

Describe the differences between forks, clones, and branches. When would you use
one instead of another?

    Forks
	It creates a clone of a GitHub repository onto another GitHub account.
	It is done when you want to have a remote repository of an existing
	repository of other developer, and you don't want to modify his
	repository. This way, you can make pulls and pushes to update your
	local and remote repository without changing the original GitHub
	repository.

    Clones
	It clones an existing repository (local or remote) to a local directory
	of your own computer. When you clone a GitHub repository to your local
	directory, you can commit new versions and push it onto the GitHub
	repository, updating it. Also, doing the clone from a GitHub
	repository, it will automatically create a remote refered to the link
	address of this same GitHub repository. So, if you don't want to
	make changes on this GitHub, you must fork it first, then clone your
	forked repository to your local machine.

    Branches
	It is different from forks and clones, because it will not create a
	copy of a repository. It will just create a new branch from the commit
	it is checked out. If you just want to experiment a new feature to your
	project, you can just create a new branch, rather than cloning the
	whole repository.

What is the benefit of having a copy of the last known state of the remote 
stored locally?

    If you have a copy of the last known state of the remote stored locally,
    you can have an offline access of all the changes that have been made
    since the last time you fetched the remote. If there are any conflicts
    between the local and remote repositories, you can verify it by the
    "git diff" command and figure it out how to solve it.


